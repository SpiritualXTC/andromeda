<?xml version="1.0"?>
<effect version="400">

  <!-- Setup Shaders -->
  <shader name="skyboxVert" source="skybox.vs" />
  <shader name="skyboxFrag" source="skybox.fs" />
  
  <shader name="defGeometryVert" source="deferredGeometry.vs" />
  <shader name="defgeometryFrag" source="deferredGeometry.fs" />
  
  <shader name="defRendererVert" source="deferredRenderer.vs" />
  <shader name="defRendererFrag" source="deferredRenderer.fs" />


  <state name="skybox">
    <cull>front</cull>
  </state>
  
  <state name="geometry">
    <depth enable="true" />
    <polygon>fill</polygon>
    <cull>back</cull>
  </state>

  <state name="lighting">
    <depth enable="true" />
    <blending enable="false" />
    <cull>none</cull>
  </state>

  <!--
    
  -->


  <!-- Renders the Skybox to the background -->
  <technique name="skybox">
    <pass state="skybox">
      <vertexShader shader="skyboxVert" />
      <fragmentShader shader="skyboxFrag" />
    </pass>
  </technique>

  <!--
    Renders Geometry into the GBuffer
  -->
  <technique name="terrain">
    <!-- 
      Renders Terrain with advanced Geometry Shader
      It Doesn't really, but lol.
    -->
    <pass name="terrain">
      <vertexShader shader="defGeometryVert" />
      <fragmentShader shader="defgeometryFrag" />
    </pass>
  </technique>



  <!--
      Renders Objects into the GBuffer
  -->
  <technique name="objects">
    <pass name="objects" state="geometry">
      <vertexShader shader="defGeometryVert" />
      <fragmentShader shader="defgeometryFrag" />
    </pass>
  </technique>


  <!--
    Renders Directional Light
  -->
  <technique name="lightDirectional">

    <!-- Renders an Entire Quad Across the Screen -->
    <pass name="directional" state="lighting">
      <vertexShader shader="defRendererVert" />
      <fragmentShader shader="defRendererFrag" />
    </pass>
  </technique>
  
  
  
  <!--
    Renders Geometric Bounded Lightings
  -->
  <technique name="lightBounded">

    <!-- Render Geometry that Represents Lighting Cones -->
    <!--
    <pass name="lights">
      <vertexShader shader="defRendererVert" />
      <fragmentShader shader="defRendererFrag" />
    </pass>
    -->
  </technique>
  



</effect>



