
Initialisation: [New Version]
-----------------------------

Andromeda
 |
 --- Config
 |
 --- ResourceManager ??? (System?)
 |
 --- System
 |   |
 |   --- Display
 |   |
 |	 --- Platform
 |	 |   |
 |	 |   --- Input Devices[]
 |	 |	 
 |	 | --- Context (Could be done by platform)
 |   
 |--- Timing
 |
 |--- Renderer
 |
 |--- EventManager



Important:
----------
Rename:	andromeda/Platform to andromeda/System
Move:	andromeda/Engine/system to andromeda/System/system



Renderer Notes:
---------------

Relevant Classes:
Renderer:
	The renderer "configures" the context and clears the buffer.
	Only a single renderer is needed.
	A rendererd contains multiple views/viewports

View:
	Viewport dimensions (as a weight [0, 1])
	Each view contains knownledge about the active camera in the scene

SceneGraph:
	Contains all of the objects in a scene including lights, cameras, objects.


- A View has a reference to a SceneGraph
- A SceneGraph contains a list of objects, camera, lights. Essenstially a complete list of all objects that comprise a scene
	- The basic implementation will be non hierarchical SceneGraph.
	- However it is also an interface so could (in theory) contain hierarchy with a different implementation



1. The renderer is updated (drawn).
2. FOREACH view.
3.  Determine what objects in the scene need to be displayed





Resource Notes:
---------------
- The Font: 'unispace.ttf' is NOT allowed to be used in embedded applications!
	- For testing it will do :) lolololol